// <auto-generated />
using System;
using Crm.Repository.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Crm.Repository.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Crm.Repository.TbEntity.HotNewsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ChildrenGid");

                    b.Property<string>("CoverUrl");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("InformationSource")
                        .HasMaxLength(50);

                    b.Property<int>("IsDelete");

                    b.Property<string>("NewsContent")
                        .IsRequired();

                    b.Property<Guid>("ParentGid");

                    b.Property<DateTime?>("ShowTime");

                    b.Property<string>("Subtitle")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("tb_HotNews");
                });

            modelBuilder.Entity("Crm.Repository.TbEntity.HotSpotEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContentUrl")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("ImgTitle")
                        .HasMaxLength(50);

                    b.Property<int>("IsDelete");

                    b.HasKey("Id");

                    b.ToTable("tb_HotSpot");
                });

            modelBuilder.Entity("Crm.Repository.TbEntity.NoticeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("FileDownload");

                    b.Property<int>("IsDelete");

                    b.Property<string>("NewsContent")
                        .IsRequired();

                    b.Property<Guid>("NoticeType");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("tb_Notice");
                });

            modelBuilder.Entity("Crm.Repository.TbEntity.OperationLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("IsDelete");

                    b.Property<string>("OpentionContext");

                    b.Property<string>("OpentionControllerStr");

                    b.Property<string>("OperationEvent");

                    b.Property<DateTime>("OperationTime");

                    b.Property<string>("OperationUser")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("tb_OperationLog");
                });

            modelBuilder.Entity("Crm.Repository.TbEntity.TabMenuEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("IsDelete");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("ParentGid");

                    b.Property<int>("SortNum");

                    b.HasKey("Id");

                    b.ToTable("tb_TabMenu");
                });

            modelBuilder.Entity("Crm.Repository.TbEntity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("IsDelete");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LoginPwd")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Crm.Repository.TbEntity.UserLoginLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Ip");

                    b.Property<int>("IsDelete");

                    b.Property<Guid>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("UserLoginLog");
                });
#pragma warning restore 612, 618
        }
    }
}
